<!DOCTYPE html>
<html lang="fr">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Dashboard - Gestion de Boutique</title>
  <link rel="stylesheet" href="{{ asset('build/styles.css') }}">
  {# Include Tailwind CSS #}
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
  {# Include Font Awesome #}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  {# Include Google Fonts #}
  <link
    href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Poppins:wght@300;400;500;600&display=swap"
    rel="stylesheet" />
  {# Include Flowbite CSS #}
  <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.3/flowbite.min.css" rel="stylesheet" />
</head>
<style>
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap");

body {
  font-family: "Poppins", sans-serif;
}

.sidebar {
  width: 250px;
  background: linear-gradient(to right, #2b6cb0, #2d3748);
  height: 100vh;
  z-index: 1000;
  position: fixed;
  top: 0;
  left: -250px;
  transition: left 0.3s ease-in-out;
}

.sidebar.active {
  left: 0;
}

.sidebar a {
  padding: 1rem;
  color: #ffffff;
  font-size: 16px;
  text-decoration: none;
  transition: background-color 0.2s, padding-left 0.2s, z-index 0.2s;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.sidebar a i {
  font-size: 20px;
  margin-right: 10px;
}

.sidebar a:hover {
  background-color: #4a5568;
  padding-left: 1.5rem;
  z-index: 10;
}

.sidebar .active {
  background-color: #4a5568;
  margin-top: 10%;
  font-weight: 600;
}

.content {
  padding-left: 0;
  background-color: #f7fafc;
  width: 100%;
  min-height: 100vh;
  transition: padding-left 0.3s ease-in-out;
  position: relative;
  z-index: 1;
  transition: margin-left 0.3s ease-in-out;
}

.sidebar-active .content {
  margin-left: 250px;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
  display: none;
}

.sidebar-active .overlay {
  display: block;
}

.header-user {
  position: relative;
  width: auto;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.header-user img {
  width: 40px;
  height: 40px;
  border: 2px solid black;
  border-radius: 50%;
}

.header-user div {
  margin-left: 10px;
}

.search-bar {
  width: 100%;
  max-width: 600px;
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.search-bar input {
  border-radius: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  padding: 0.5rem 1rem;
  width: 100%;
  font-size: 16px;
}

.card {
  background: #ffffff;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  border-radius: 0.375rem;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.card h3 {
  font-size: 1.125rem;
  color: #2d3748;
  margin-top: 0.5rem;
}

.card p {
  font-size: 1.5rem;
  color: #2d3748;
}

.card .icon {
  font-size: 2rem;
  margin-bottom: 0.5rem;
}

.header {
  border-bottom-left-radius: 20px;
  padding: 1rem;
}

table {
  width: 100%;
  border-collapse: collapse;
}

th, td {
  padding: 0.75rem;
  text-align: left;
}

th {
  background-color: #f7fafc;
}

tr:nth-child(even) {
  background-color: #f1f5f9;
}

thead th {
  background-color: #2b6cb0;
  color: #ffffff;
}

@media (min-width: 768px) {
  .sidebar {
    left: 0;
  }

  .content {
    padding-left: 250px;
  }

  .header-user {
    width: auto;
  }
}

@media (max-width: 767px) {
  .search-bar {
    flex-direction: column;
  }

  .search-bar input {
    margin-bottom: 1rem;
  }

  .card {
    margin-bottom: 1rem;
  }
}

@media (max-width: 768px) {
  .header {
    flex-direction: column;
    align-items: stretch;
    border-bottom-left-radius: 20px;
    height: 10%;
  }

  .search-bar {
    width: 100%;
    margin-bottom: 1rem;
  }

  .header-user {
    width: 100%;
    justify-content: center;
  }

  .header-user img {
    width: 40px;
    height: 40px;
  }

  .header-user div {
    font-size: 0.8rem;
  }
}

@media (max-width: 640px) {
  .header-user {
    width: 100%;
    justify-content: center;
  }

  .header {
    padding: 1rem;
  }

  .search-bar {
    order: 2;
  }

  .header-user {
    order: 1;
    margin-bottom: 1rem;
  }
}

@media (min-width: 641px) and (max-width: 1024px) {
  .search-bar input {
    font-size: 14px;
  }
}

@media (min-width: 641px) {
  .search-bar input {
    font-size: 14px;
  }
}
/* public/css/styles.css */
.stat-card {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.3s ease;
}

.stat-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.stat-icon {
  background: linear-gradient(135deg, #3182ce, #2b6cb0);
}

@media (max-width: 767px) {
  .sidebar {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    top: auto;
    height: auto;
    width: 100%;
    background: white;
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
    display: flex;
    justify-content: space-around;
    padding: 5px 0;
    z-index: 1000;
  }

  .sidebar a {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 10px;
    color: #2d3748;
    font-size: 12px;
    text-align: center;
  }

  .sidebar a i {
    font-size: 24px;
    margin-right: 0;
    margin-bottom: 5px;
  }

  .sidebar > div:first-child {
    display: none;
  }

  .content {
    padding-bottom: 70px;
  }

  .logo {
    display: none;
  }
}

</style>


{% block body %}
<body class="bg-gray-100">
    <div class="flex flex-col md:flex-row">
        <div class="sidebar" id="sidebar">
            <div class="p-4 flex items-center h-32 logo">
                <svg class="w-20 h-20 mr-2" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect width="40" height="24" rx="4" fill="white" />
                    <path d="M17 8H7C5.89543 8 5 8.89543 5 10V16C5 17.1046 5.89543 18 7 18H17C18.1046 18 19 17.1046 19 16V10C19 8.89543 18.1046 8 17 8Z"
                          stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M12 12C12.5523 12 13 11.5523 13 11C13 10.4477 12.5523 10 12 10C11.4477 10 11 10.4477 11 11C11 11.5523 11.4477 12 12 12Z"
                          stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M16 16H8" stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <div class="flex flex-col text-white font-bold text-xl">
                    <span>GESTION</span>
                    <span>BOUTIQUE</span>
                </div>
            </div>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="dashboard">
                <i class="fas fa-tachometer-alt text-lg mr-3"></i> Dashboard
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="dettes">
                <i class="fas fa-dollar-sign text-lg mr-3"></i> Dettes
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="clients">
                <i class="fas fa-users text-lg mr-3"></i> Clients
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="articles">
                <i class="fas fa-box text-lg mr-3"></i> Articles
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="demandes">
                <i class="fas fa-envelope text-lg mr-3"></i> Demandes
            </a>
             <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('utilisateurs')}}">
                <i class="fas fa-user text-lg mr-3"></i> Utilisateurs
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('app_logout')}}">
                 <i class="fas fa-sign-out-alt text-lg mr-3"></i></i> Deconnexion
            </a>
        </div>
        <div class="content">
            <header class="flex flex-col sm:flex-row justify-between items-center bg-white shadow-md px-4 py-2 header ml-5">
                <div class="p-4 flex items-center h-32 md:hidden">
                    <svg class="w-20 h-20 mr-2" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect width="40" height="24" rx="4" fill="white" />
                        <path d="M17 8H7C5.89543 8 5 8.89543 5 10V16C5 17.1046 5.89543 18 7 18H17C18.1046 18 19 17.1046 19 16V10C19 8.89543 18.1046 8 17 8Z"
                              stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        <path d="M12 12C12.5523 12 13 11.5523 13 11C13 10.4477 12.5523 10 12 10C11.4477 10 11 10.4477 11 11C11 11.5523 11.4477 12 12 12Z"
                              stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        <path d="M16 16H8" stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    </svg>
                    <div class="flex flex-col text-gray-800 font-bold text-xl">
                        <span>GESTION</span>
                        <span>BOUTIQUE</span>
                    </div>
                </div>
        <div class="search-bar flex items-center w-full sm:w-1/2 lg:w-3/5 mb-2 sm:mb-0">
            <input type="text" placeholder="Rechercher dans votre boutique..."
                class="w-full px-4 py-2 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all text-sm sm:text-base" />
        </div>

        <button class="header-user flex items-center mt-2 sm:mt-0" data-popover-target="popover-bottom"
            data-popover-placement="bottom" type="button" data-popover-trigger="click">
            <img src="https://images.unsplash.com/photo-1499714608240-22fc6ad53fb2" alt="Photo Utilisateur"
                class="w-10 h-10 sm:w-12 sm:h-12 rounded-full border-2 border-blue-500" />
            <div class="pl-2 sm:pl-4 py-1 ml-2">
                <p class="text-gray-700 text-xs sm:text-sm font-semibold">{{ connectedUser.prenom }}</p>
                <p class="text-gray-700 text-xs sm:text-sm font-semibold">{{ connectedUser.nom }}</p>
            </div>
        </button>

        <div data-popover id="popover-bottom" role="tooltip"
            class="absolute right-2 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-10 invisible" style="top: 3rem">
            <div class="px-4 py-2 text-center">
                <img class="w-16 h-16 rounded-full mx-auto"
                    src="https://images.unsplash.com/photo-1499714608240-22fc6ad53fb2" alt="User avatar" />
                <p class="mt-2 font-semibold">{{ connectedUser.prenom }} {{ connectedUser.nom }}</p>
            </div>
            <a href=""
                class="block px-4 py-2 text-sm text-center text-gray-700 hover:bg-gray-100">MODIFIER</a>
            <a href=""
                class="block px-4 py-2 text-sm text-center text-gray-700 hover:bg-gray-100">DECONNEXION</a>
        </div>
    </header>
   <main class="mt-8 mx-4 md:mr-8 rounded-xl bg-white p-4 shadow-sm flex flex-col main-content">
    <div class="mb-4 flex justify-between flex-wrap">
        <span class="text-gray-600 text-xl font-bold mb-2 sm:mb-0">Approvisionnement</span>
        <button id="openArticleModal" class="bg-blue-500 text-white px-4 py-2 rounded">
            Nouvel Article
        </button>
    </div>

    <div class="product-list bg-white rounded-lg shadow p-4 mb-4">
        <h2 class="text-2xl font-bold mb-4">Lister les produits</h2>
        <form method="get" action="{{ path('article_index') }}" class="mb-4 flex justify-between">
            <input type="text" name="libelle" value="{{ libelleFilter }}" placeholder="Rechercher un article" 
                   class="p-2 border border-gray-300 rounded">
            <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded">Rechercher</button>
        </form>
        
        <table class="w-full">
            <thead>
                <tr class="bg-blue-500 text-white">
                    <th class="p-2 text-center">Article</th>
                    <th class="p-2 text-center">Prix</th>
                    <th class="p-2 text-center">Qte en stock</th>
                    <th class="p-2 text-center">Action</th>
                </tr>
            </thead>
            <tbody>
                {% for article in articles %}
                <tr>
                    <td class="p-2 text-center">{{ article.nom }}</td>
                    <td class="p-2 text-center">{{ article.prix }}</td>
                    <td class="p-2 text-center">{{ article.qteStock }}</td>
                    <td class="p-2 text-center">
                        <button class="bg-yellow-500 text-white px-2 py-1 rounded updateStockButton" 
                                data-id="{{ article.id }}" data-qte="{{ article.qteStock }}">
                            Modifier
                        </button>
                    </td>
                </tr>
                {% else %}
                <tr>
                    <td colspan="4" class="text-center text-gray-500">Aucun article trouvé.</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <div id="articleModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
        <div class="bg-white rounded-lg p-6 w-1/3">
            <h3 class="text-xl font-semibold mb-4">Ajouter un Article</h3>
            <label>Nom</label>
            <input type="text" id="nom" class="w-full border p-2 rounded mb-4">
            <label>Prix</label>
            <input type="number" id="prix" class="w-full border p-2 rounded mb-4">
            <label>Quantité Stock</label>
            <input type="number" id="qte_stock" class="w-full border p-2 rounded mb-4">
            <div class="text-right">
                <button id="closeArticleModal" class="bg-gray-300 px-4 py-2 rounded mr-2">Fermer</button>
                <button id="saveArticleButton" class="bg-blue-500 text-white px-4 py-2 rounded">Enregistrer</button>
            </div>
        </div>
    </div>

    <div id="updateStockModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
        <div class="bg-white rounded-lg p-6 w-1/3">
            <h3 class="text-xl font-semibold mb-4">Modifier le Stock</h3>
            <input type="number" id="newStockInput" class="w-full border p-2 rounded mb-4" placeholder="Nouvelle quantité">
            <div class="text-right">
                <button id="closeStockModal" class="bg-gray-300 px-4 py-2 rounded mr-2">Fermer</button>
                <button id="saveStockButton" class="bg-blue-500 text-white px-4 py-2 rounded">Enregistrer</button>
            </div>
        </div>
    </div>
</main>



<script>
  document.addEventListener('DOMContentLoaded', () => {
    const articleModal = document.getElementById('articleModal');
    const updateStockModal = document.getElementById('updateStockModal');
    const openArticleModalButton = document.getElementById('openArticleModal');
    const closeArticleModalButton = document.getElementById('closeArticleModal');
    const saveArticleButton = document.getElementById('saveArticleButton');
    const closeStockModalButton = document.getElementById('closeStockModal');
    const saveStockButton = document.getElementById('saveStockButton');
    let selectedArticleId = null;

    openArticleModalButton.addEventListener('click', () => {
        articleModal.classList.remove('hidden');
    });

    closeArticleModalButton.addEventListener('click', () => {
        articleModal.classList.add('hidden');
    });

    saveArticleButton.addEventListener('click', async () => {
        const nom = document.getElementById('nom').value.trim();
        const prix = parseFloat(document.getElementById('prix').value);
        const qteStock = parseInt(document.getElementById('qte_stock').value, 10);

        if (!nom || isNaN(prix) || isNaN(qteStock)) {
            alert('Veuillez remplir correctement tous les champs.');
            return;
        }

        try {
            const response = await fetch('/articles/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ nom, prix, qteStock })
            });

            const result = await response.json();
            if (response.ok && result.success) {
                alert('Article ajouté avec succès !');
                location.reload();
            } else {
                alert(result.message || 'Erreur lors de l’ajout de l’article.');
            }
        } catch (error) {
            console.error(error);
            alert('Erreur réseau lors de la requête.');
        }
    });

    document.querySelectorAll('.updateStockButton').forEach(button => {
        button.addEventListener('click', () => {
            selectedArticleId = button.dataset.id;
            const qte = button.dataset.qte;
            document.getElementById('newStockInput').value = qte;
            updateStockModal.classList.remove('hidden');
        });
    });

    closeStockModalButton.addEventListener('click', () => {
        updateStockModal.classList.add('hidden');
    });

    saveStockButton.addEventListener('click', async () => {
        const newStock = parseInt(document.getElementById('newStockInput').value, 10);

        if (isNaN(newStock) || newStock < 0) {
            alert('Veuillez entrer une quantité valide.');
            return;
        }

        try {
            const response = await fetch(`/articles/update-stock/${selectedArticleId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ qteStock: newStock })
            });

            const result = await response.json();
            if (response.ok && result.success) {
                alert('Stock mis à jour avec succès !');
                location.reload();
            } else {
                alert(result.message || 'Erreur lors de la mise à jour du stock.');
            }
        } catch (error) {
            console.error(error);
            alert('Erreur réseau lors de la requête.');
        }
    });
});

</script>




</body>
{% endblock %}
