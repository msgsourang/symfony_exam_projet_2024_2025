<!DOCTYPE html>
<html lang="fr">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Dashboard - Gestion de Boutique</title>
  <link rel="stylesheet" href="{{ asset('build/styles.css') }}">
  {# Include Tailwind CSS #}
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
  {# Include Font Awesome #}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  {# Include Google Fonts #}
  <link
    href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Poppins:wght@300;400;500;600&display=swap"
    rel="stylesheet" />
  {# Include Flowbite CSS #}
  <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.3/flowbite.min.css" rel="stylesheet" />
</head>
<style>
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap");

body {
  font-family: "Poppins", sans-serif;
}

.sidebar {
  width: 250px;
  background: linear-gradient(to right, #2b6cb0, #2d3748);
  height: 100vh;
  z-index: 1000;
  position: fixed;
  top: 0;
  left: -250px;
  transition: left 0.3s ease-in-out;
}

.sidebar.active {
  left: 0;
}

.sidebar a {
  padding: 1rem;
  color: #ffffff;
  font-size: 16px;
  text-decoration: none;
  transition: background-color 0.2s, padding-left 0.2s, z-index 0.2s;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.sidebar a i {
  font-size: 20px;
  margin-right: 10px;
}

.sidebar a:hover {
  background-color: #4a5568;
  padding-left: 1.5rem;
  z-index: 10;
}

.sidebar .active {
  background-color: #4a5568;
  margin-top: 10%;
  font-weight: 600;
}

.content {
  padding-left: 0;
  background-color: #f7fafc;
  width: 100%;
  min-height: 100vh;
  transition: padding-left 0.3s ease-in-out;
  position: relative;
  z-index: 1;
  transition: margin-left 0.3s ease-in-out;
}

.sidebar-active .content {
  margin-left: 250px;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
  display: none;
}

.sidebar-active .overlay {
  display: block;
}

.header-user {
  position: relative;
  width: auto;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.header-user img {
  width: 40px;
  height: 40px;
  border: 2px solid black;
  border-radius: 50%;
}

.header-user div {
  margin-left: 10px;
}

.search-bar {
  width: 100%;
  max-width: 600px;
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.search-bar input {
  border-radius: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  padding: 0.5rem 1rem;
  width: 100%;
  font-size: 16px;
}

.card {
  background: #ffffff;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  border-radius: 0.375rem;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.card h3 {
  font-size: 1.125rem;
  color: #2d3748;
  margin-top: 0.5rem;
}

.card p {
  font-size: 1.5rem;
  color: #2d3748;
}

.card .icon {
  font-size: 2rem;
  margin-bottom: 0.5rem;
}

.header {
  border-bottom-left-radius: 20px;
  padding: 1rem;
}

table {
  width: 100%;
  border-collapse: collapse;
}

th, td {
  padding: 0.75rem;
  text-align: left;
}

th {
  background-color: #f7fafc;
}

tr:nth-child(even) {
  background-color: #f1f5f9;
}

thead th {
  background-color: #2b6cb0;
  color: #ffffff;
}

@media (min-width: 768px) {
  .sidebar {
    left: 0;
  }

  .content {
    padding-left: 250px;
  }

  .header-user {
    width: auto;
  }
}

@media (max-width: 767px) {
  .search-bar {
    flex-direction: column;
  }

  .search-bar input {
    margin-bottom: 1rem;
  }

  .card {
    margin-bottom: 1rem;
  }
}

@media (max-width: 768px) {
  .header {
    flex-direction: column;
    align-items: stretch;
    border-bottom-left-radius: 20px;
    height: 10%;
  }

  .search-bar {
    width: 100%;
    margin-bottom: 1rem;
  }

  .header-user {
    width: 100%;
    justify-content: center;
  }

  .header-user img {
    width: 40px;
    height: 40px;
  }

  .header-user div {
    font-size: 0.8rem;
  }
}

@media (max-width: 640px) {
  .header-user {
    width: 100%;
    justify-content: center;
  }

  .header {
    padding: 1rem;
  }

  .search-bar {
    order: 2;
  }

  .header-user {
    order: 1;
    margin-bottom: 1rem;
  }
}

@media (min-width: 641px) and (max-width: 1024px) {
  .search-bar input {
    font-size: 14px;
  }
}

@media (min-width: 641px) {
  .search-bar input {
    font-size: 14px;
  }
}
/* public/css/styles.css */
.stat-card {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.3s ease;
}

.stat-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.stat-icon {
  background: linear-gradient(135deg, #3182ce, #2b6cb0);
}

@media (max-width: 767px) {
  .sidebar {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    top: auto;
    height: auto;
    width: 100%;
    background: white;
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
    display: flex;
    justify-content: space-around;
    padding: 5px 0;
    z-index: 1000;
  }

  .sidebar a {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 10px;
    color: #2d3748;
    font-size: 12px;
    text-align: center;
  }

  .sidebar a i {
    font-size: 24px;
    margin-right: 0;
    margin-bottom: 5px;
  }

  .sidebar > div:first-child {
    display: none;
  }

  .content {
    padding-bottom: 70px;
  }

  .logo {
    display: none;
  }
}

</style>


{% block body %}
<body class="bg-gray-100">
    <div class="flex flex-col md:flex-row">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="p-4 flex items-center h-32 logo">
                <svg class="w-20 h-20 mr-2" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect width="40" height="24" rx="4" fill="white" />
                    <path d="M17 8H7C5.89543 8 5 8.89543 5 10V16C5 17.1046 5.89543 18 7 18H17C18.1046 18 19 17.1046 19 16V10C19 8.89543 18.1046 8 17 8Z"
                          stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M12 12C12.5523 12 13 11.5523 13 11C13 10.4477 12.5523 10 12 10C11.4477 10 11 10.4477 11 11C11 11.5523 11.4477 12 12 12Z"
                          stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M16 16H8" stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <div class="flex flex-col text-white font-bold text-xl">
                    <span>GESTION</span>
                    <span>BOUTIQUE</span>
                </div>
            </div>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('app_dashboard') }}">
                <i class="fas fa-tachometer-alt text-lg mr-3"></i> Dashboard
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('dette_index') }}">
                <i class="fas fa-dollar-sign text-lg mr-3"></i> Dettes
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('client_index') }}">
                <i class="fas fa-users text-lg mr-3"></i> Clients 
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('article_index') }}">
                <i class="fas fa-box text-lg mr-3"></i> Articles 
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('demande_index') }}">
                <i class="fas fa-envelope text-lg mr-3"></i> Demandes
            </a>
             <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('utilisateurs')}}">
                <i class="fas fa-user text-lg mr-3"></i> Utilisateurs
            </a>
            <a class="block px-4 py-2 mt-2 text-sm font-semibold text-white hover:bg-gray-600" href="{{ path('app_logout')}}">
                 <i class="fas fa-sign-out-alt text-lg mr-3"></i></i> Deconnexion
            </a>
        </div>
        <div class="content">
            <header class="flex flex-col sm:flex-row justify-between items-center bg-white shadow-md px-4 py-2 header ml-5">
                <div class="p-4 flex items-center h-32 md:hidden">
                    <svg class="w-20 h-20 mr-2" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect width="40" height="24" rx="4" fill="white" />
                        <path d="M17 8H7C5.89543 8 5 8.89543 5 10V16C5 17.1046 5.89543 18 7 18H17C18.1046 18 19 17.1046 19 16V10C19 8.89543 18.1046 8 17 8Z"
                              stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        <path d="M12 12C12.5523 12 13 11.5523 13 11C13 10.4477 12.5523 10 12 10C11.4477 10 11 10.4477 11 11C11 11.5523 11.4477 12 12 12Z"
                              stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        <path d="M16 16H8" stroke="#1E40AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    </svg>
                    <div class="flex flex-col text-gray-800 font-bold text-xl">
                        <span>GESTION</span>
                        <span>BOUTIQUE</span>
                    </div>
                </div>
        <div class="search-bar flex items-center w-full sm:w-1/2 lg:w-3/5 mb-2 sm:mb-0">
            <input type="text" placeholder="Rechercher dans votre boutique..."
                class="w-full px-4 py-2 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all text-sm sm:text-base" />
        </div>

        <button class="header-user flex items-center mt-2 sm:mt-0" data-popover-target="popover-bottom"
            data-popover-placement="bottom" type="button" data-popover-trigger="click">
            <img src="https://images.unsplash.com/photo-1499714608240-22fc6ad53fb2" alt="Photo Utilisateur"
                class="w-10 h-10 sm:w-12 sm:h-12 rounded-full border-2 border-blue-500" />
            <div class="pl-2 sm:pl-4 py-1 ml-2">
                <p class="text-gray-700 text-xs sm:text-sm font-semibold">{{ connectedUser.prenom }}</p>
                <p class="text-gray-700 text-xs sm:text-sm font-semibold">{{ connectedUser.nom }}</p>
            </div>
        </button>

        <div data-popover id="popover-bottom" role="tooltip"
            class="absolute right-2 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-10 invisible" style="top: 3rem">
            <div class="px-4 py-2 text-center">
                <img class="w-16 h-16 rounded-full mx-auto"
                    src="https://images.unsplash.com/photo-1499714608240-22fc6ad53fb2" alt="User avatar" />
                <p class="mt-2 font-semibold">{{ connectedUser.prenom }} {{ connectedUser.nom }}</p>
            </div>
            <a href=""
                class="block px-4 py-2 text-sm text-center text-gray-700 hover:bg-gray-100">MODIFIER</a>
            <a href=""
                class="block px-4 py-2 text-sm text-center text-gray-700 hover:bg-gray-100">DECONNEXION</a>
        </div>
    </header>

   <main class="container mx-auto mt-8 p-6 bg-white rounded shadow">
    <h1 class="text-2xl font-bold mb-6 text-gray-800">Ajouter une Nouvelle Dette</h1>

    {% for message in app.flashes('success') %}
        <div class="mb-4 p-4 bg-green-100 text-green-800 rounded">{{ message }}</div>
    {% endfor %}
    {% for message in app.flashes('error') %}
        <div class="mb-4 p-4 bg-red-100 text-red-800 rounded">{{ message }}</div>
    {% endfor %}

    <form method="POST" action="{{ path('create_demande') }}">
        <div class="mb-6">
            <label for="client" class="block text-gray-700 font-semibold mb-2">Sélectionner un Client</label>
            <select name="client_id" id="client" class="w-full border border-gray-300 p-2 rounded">
                <option value="">-- Sélectionner un client --</option>
                {% for client in clients %}
                    <option value="{{ client.id }}"> {{ client.prenom }} {{ client.nom }} - {{ client.telephone }}</option>
                {% endfor %}
            </select>
        </div>

        <h2 class="text-lg font-semibold mb-4">Articles Disponibles</h2>
        <div class="overflow-x-auto">
            <table class="w-full bg-white border">
                <thead>
                    <tr class="bg-blue-500 text-white">
                        <th class="p-2">Article</th>
                        <th class="p-2">Prix</th>
                        <th class="p-2">Quantité</th>
                    </tr>
                </thead>
                <tbody>
                    {% for article in articles %}
                        <tr>
                            <td class="p-2">{{ article.nom }}</td>
                            <td class="p-2">{{ article.prix }} FCFA</td>
                            <td class="p-2">
                                <input type="number" name="articles[{{ article.id }}]" min="0" max="{{ article.qteStock }}" value="0" class="border rounded p-1 w-20">
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="3" class="text-center text-gray-500">Aucun article disponible.</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="mt-6 text-right">
            <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded">Créer la Dette</button>
        </div>
    </form>
    <div class="mt-6">
            <a href="{{ path('demande_index') }}" class="btn bg-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-400">
                <i class="fas fa-arrow-left mr-2"></i>Retour
            </a>
        </div>
</main>
{% endblock %}
<script>
document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('newDemandeModal');
    const openModalButton = document.getElementById('openNewDemandeModal');
    const closeModalButton = document.getElementById('closeModalButton');
    const createDemandeButton = document.getElementById('createDemandeButton');
    const form = document.getElementById('newDemandeForm');

    let clientId = null;

    openModalButton.addEventListener('click', () => {
        modal.classList.remove('hidden');
        modal.classList.add('flex');
    });

    closeModalButton.addEventListener('click', () => {
        modal.classList.add('hidden');
        modal.classList.remove('flex');
    });

    async function checkClient() {
        const nom = document.getElementById('clientNom').value.trim();
        const prenom = document.getElementById('clientPrenom').value.trim();
        const telephone = document.getElementById('clientTelephone').value.trim();

        if (!nom || !prenom || !telephone) {
            alert('Veuillez remplir le nom, prénom et téléphone.');
            return false;
        }

        try {
            const response = await fetch('/clients/check', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ nom, prenom, telephone }),
            });

            const result = await response.json();
            if (result.success) {
                clientId = result.clientId;
                return true;
            } else {
                alert(result.message || 'Client non trouvé.');
                return false;
            }
        } catch (error) {
            console.error('Erreur lors de la vérification du client:', error);
            alert('Erreur réseau. Veuillez réessayer.');
            return false;
        }
    }

    createDemandeButton.addEventListener('click', async () => {
        const clientExists = await checkClient();
        if (!clientExists) return;

        const articles = Array.from(form.querySelectorAll('table tbody tr'))
            .filter(row => row.querySelector('.quantity-input').value > 0)
            .map(row => ({
                id: row.dataset.id,
                quantity: parseInt(row.querySelector('.quantity-input').value, 10),
            }));

        if (articles.length === 0) {
            alert('Veuillez sélectionner au moins un article.');
            return;
        }

        const data = {
            clientId,
            articles,
        };

        try {
            const response = await fetch('/demandes/create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data),
            });

            const result = await response.json();
            if (result.success) {
                alert(result.message);
                location.reload();
            } else {
                alert(result.message || 'Erreur lors de la création de la demande.');
            }
        } catch (error) {
            console.error('Erreur lors de la création de la demande:', error);
            alert('Une erreur est survenue.');
        }
    });
});

</script>
